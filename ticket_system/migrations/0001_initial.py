# Generated by Django 2.1.7 on 2019-05-08 23:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='noteAuthorName', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='StatusChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='Open', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statusChangeAuthorName', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'StatusChange',
                'verbose_name_plural': 'StatusChanges',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offenders', models.TextField(blank=True, null=True)),
                ('corroborators', models.TextField(blank=True, null=True)),
                ('others_involved', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ticket_type', models.CharField(default='Report', max_length=128)),
                ('image', models.TextField(blank=True, null=True)),
                ('priority', models.PositiveIntegerField(default=1)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='Open', max_length=10)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('date_resolved', models.DateTimeField(blank=True, null=True)),
                ('escalated', models.BooleanField(default=False)),
                ('viewed', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketAuthorName', to=settings.AUTH_USER_MODEL)),
                ('judge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judgeAuthorName', to=settings.AUTH_USER_MODEL)),
                ('person_who_viewed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personWhoViewedAuthorName', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'ordering': ('status', '-priority'),
            },
        ),
        migrations.AddField(
            model_name='statuschange',
            name='ticket_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='statusChanges', to='ticket_system.Ticket'),
        ),
        migrations.AddField(
            model_name='note',
            name='ticket_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticketNotes', to='ticket_system.Ticket'),
        ),
    ]
